name: Fetch and Process Build Workflow Log

on:
  workflow_run:
    workflows: [build]  # Must match exactly the name in build.yml
    types: [completed]  # Added 'requested' to catch more events
    branches: [master, rootless]

# PERMISSIONS FOR LOG PROCESSING
permissions:
  actions: read    # To read the workflow logs
  contents: write  # To upload artifacts

jobs:
  process-log:
    # Only run if the build workflow completed (not cancelled)
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check which workflow triggered this
        run: |
          echo "Triggered by workflow: ${{ github.event.workflow_run.name }}"
          echo "Workflow ID: ${{ github.event.workflow_run.id }}"
          echo "Conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}  # Checkout the same branch

      - name: Fetch workflow log
        uses: actions/github-script@v6
        id: fetch-log
        with:
          script: |
            // Use the workflow run ID from the triggering event
            const runId = context.payload.workflow_run.id;
            console.log('Fetching logs for run ID:', runId);
            
            try {
              const response = await github.rest.actions.downloadWorkflowRunLogs({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: runId,
              });
              
              // The response might be a stream, so we handle it differently
              const fs = require('fs');
              const path = require('path');
              
              // For GitHub API v6, the response might be a string already
              if (typeof response.data === 'string') {
                fs.writeFileSync(path.join(process.env.GITHUB_WORKSPACE, 'raw_log.txt'), response.data);
              } else {
                // If it's a stream, we might need to handle it differently
                fs.writeFileSync(path.join(process.env.GITHUB_WORKSPACE, 'raw_log.txt'), 'Binary log data received');
              }
              
              console.log('Log downloaded successfully');
              return 'Log downloaded';
            } catch (error) {
              console.error('Error downloading log:', error.message);
              // Create a diagnostic file instead
              const fs = require('fs');
              const path = require('path');
              fs.writeFileSync(
                path.join(process.env.GITHUB_WORKSPACE, 'raw_log.txt'), 
                `Error fetching logs: ${error.message}\n\nWorkflow Run ID: ${runId}`
              );
              return 'Error log created';
            }

      - name: Process and filter log
        run: |
          echo "Processing log file..."
          ls -la
          
          # Check if raw_log.txt exists
          if [ ! -f "raw_log.txt" ]; then
            echo "raw_log.txt not found! Creating placeholder."
            echo "Log file was not downloaded successfully" > raw_log.txt
          fi
          
          # Filter for important information
          grep -E -i \
            "##\[(warning|error)\]|Error:|error:|FAIL|FAILED|Exception|fatal:|##\[group\]|##\[endgroup\]|==>|🍺|Cache|Switched|Initialized|Cloning|Downloading|curl|unzip|make:|ldid:|brew install|THEOS|SDK|framework" \
            raw_log.txt > filtered_log.txt || echo "No matches found" > filtered_log.txt
          
          # Add header and summary
          echo "## STRIPPED BUILD LOG ##" > stripped_log.txt
          echo "Workflow: ${{ github.event.workflow_run.name }}" >> stripped_log.txt
          echo "Run ID: ${{ github.event.workflow_run.id }}" >> stripped_log.txt
          echo "Status: ${{ github.event.workflow_run.conclusion }}" >> stripped_log.txt
          echo "Branch: ${{ github.event.workflow_run.head_branch }}" >> stripped_log.txt
          echo "Commit: ${{ github.event.workflow_run.head_sha }}" >> stripped_log.txt
          echo "Triggered at: ${{ github.event.workflow_run.created_at }}" >> stripped_log.txt
          echo "=========================" >> stripped_log.txt
          cat filtered_log.txt >> stripped_log.txt
          
          # Add final result
          echo "" >> stripped_log.txt
          echo "## FINAL RESULT ##" >> stripped_log.txt
          tail -20 raw_log.txt >> stripped_log.txt 2>/dev/null || echo "No tail available" >> stripped_log.txt

      - name: Upload stripped log
        uses: actions/upload-artifact@v3
        with:
          name: stripped-build-log-${{ github.event.workflow_run.id }}
          path: stripped_log.txt
          retention-days: 7

      - name: Debug - List all files
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Artifact file contents:"
          cat stripped_log.txt || echo "No stripped log file"